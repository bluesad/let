# -*- coding: utf-8 -*-'''Created on 2012-9-9@author: zongzong'''# Notification Originator Application (TRAP)from pysnmp.carrier.asynsock.dispatch import AsynsockDispatcherfrom pysnmp.carrier.asynsock.dgram import udpfrom pyasn1.codec.ber import encoderfrom pysnmp.proto import api  from pysnmp.entity.rfc3413.oneliner import cmdgen  from pysnmp.proto import rfc1902#/**#Speed   (1, 3, 6, 1, 2, 1, 2, 2, 1, 5)#*/def getIfSpeed(ip):    errorIndication, errorStatus, errorIndex, varBinds = cmdgen.CommandGenerator().getCmd(    cmdgen.CommunityData('agent', 'jztec', 1),    cmdgen.UdpTransportTarget((ip, 161)),    #无用 (1,3,18,0,2,4,570)    #无用 (1,3,18,0,2,6,147,0)    (1, 3, 6, 1, 2, 1, 1, 1, 0),    (1, 3, 6, 1, 2, 1, 1, 2, 0),    (1, 3, 18, 0, 2, 4, 570, 0)    )        if errorStatus:        print '%s at %s\n' % (errorStatus.prettyPrint(), errorIndex and varBinds[-1][int(errorIndex) - 1] or '?')        print(errorIndication)    print(errorStatus)    print(varBinds)def updateIfSpeed(ip):    # Protocol version to use    verID = api.protoVersion1    pMod = api.protoModules[verID]    # Build PDU    trapPDU = pMod.TrapPDU()    pMod.apiTrapPDU.setDefaults(trapPDU)    # Traps have quite different semantics among proto versions    if verID == api.protoVersion1:        pMod.apiTrapPDU.setEnterprise(trapPDU, (1, 3, 6, 1, 6, 3, 1, 1, 5, 4)) #        pMod.apiTrapPDU.setGenericTrap(trapPDU, 'linkUp')        var = []        #1.3.6.1.2.1.2.2.1.5.4        oid = (1, 3, 6, 1, 2, 1, 2, 2, 1, 5, 4)        val = pMod.Integer(250)        var.append((oid, val))        print var        pMod.apiTrapPDU.setVarBinds(trapPDU, var)    # Build message    trapMsg = pMod.Message()    pMod.apiMessage.setDefaults(trapMsg)    pMod.apiMessage.setCommunity(trapMsg, 'public')    pMod.apiMessage.setPDU(trapMsg, trapPDU)        transportDispatcher = AsynsockDispatcher()    transportDispatcher.registerTransport(        udp.domainName, udp.UdpSocketTransport().openClientMode()        )    transportDispatcher.sendMessage(        encoder.encode(trapMsg), udp.domainName, (ip, 162)        )    transportDispatcher.runDispatcher()    transportDispatcher.closeDispatcher()        if __name__ == '__main__':    updateIfSpeed('192.168.11.253')